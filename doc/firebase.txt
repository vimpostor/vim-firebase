*firebase.txt*	Improved rebase todo lists.
*firebase*

CONTENTS						*firebase-contents*

Introduction					|firebase-introduction|
Configuration					|firebase-configure|
Api						|firebase-api|
Commands					|firebase-commands|
Mappings					|firebase-mappings|

==============================================================================
INTRODUCTION						*firebase-introduction*

This plugin extends the git functionality of vim-fugitive and mostly enhances
handling of the rebase todo list.

------------------------------------------------------------------------------
CONFIGURATION						*firebase-configure*

	g:firebase_options				*g:firebase_options*
All user-facing options are configured with the |g:firebase_options| variable,
which is a |Dictionary| containing all options as key-value pairs. The default
options can be retrieved with |firebase#default_options()|.
The following keys are available:

	"autocursor"					*firebase_options_autocursor*
		If truthy, automatically position the cursor at the end of the
		rebase todo-list.

	"autopush"					*firebase_options_autopush*
		If truthy, automatically push modified branches. For doing
		this manually see |firebase#rebase#push_current()|.

	"branch_format"					*firebase_options_branch_format*
		A |printf()| compatible format string to be used when naming
		branches. The `%s` will be replaced with the branch name given
		by the user. A common usecase is setting it to `"wip/user/%s"`
		or `"feat/%s"` to avoid typing boilerplate.

	"default_mappings"				*firebase_options_default_mappings*
		If truthy, use the default keybindings as defined in
		|firebase-mappings|. When you disable this, refer to
		|firebase-api| for how to setup your own keybindings.

	"pushref_formats"				*firebase_options_pushref_formats*
		An array of |Dictionary| elements, where the `push` key
		describes a pushref format string to be used for the remote
		given with the `remote` key. Remotes will be matched using the
		|=~#| operator. The first matching entry will be used and
		|printf()| will replace `%s` (if any) in the `push` key with
		the branch name.
		If no remote matches, `"refs/heads/%s"` will be used as the
		default pushref format string.
		If the pushref format is the empty string, pushing will be
		disabled completely for that remote.
		For example to use a Gerrit style pushref for matching hosts,
		set this option to:
>
	[ #{remote: 'gerrit\.foo\.com', push: 'refs/for/master'},
	\ #{remote: 'gerrit\.bar\.com', push: 'refs/for/dev'} ]
<

------------------------------------------------------------------------------
API							*firebase-api*

	firebase#rebase#newbranch_n()			*firebase#rebase#newbranch_n()*
		Creates a new branch that includes the `pick` line from the
		current cursor location.

	firebase#rebase#newbranch_v()			*firebase#rebase#newbranch_v#()*
		Creates a new branch that includes all `pick` lines from the
		selected lines in |visual-mode|.

	firebase#rebase#movecommit()			*firebase#rebase#movecommit()*
		Move the commit under the cursor to a different branch.

	firebase#rebase#movecommits()			*firebase#rebase#movecommits()*
		Move the commits under the cursor to a different branch.

	firebase#rebase#push_current()			*firebase#rebase#push_current()*
		Add a push instruction for the branch under the cursor. For
		doing this automatically see |firebase_options_autopush|.

	firebase#remote#copylink()			*firebase#remote#copylink()*
		Copy a permalink to the current file.

	firebase#remote#copylink(v)			*firebase#remote#copylink_cursor()*
		Copies a permalink pointing to the current line or to the
		current span of lines if in |visual-mode| and |v| is truthy.

------------------------------------------------------------------------------
COMMANDS						*firebase-commands*

	FirebaseJump					*:FirebaseJump*
		Uses the `git-jump` support script to populate the |quickfix|
		list with hunk locations. The arguments will be passed along
		verbatim to `git-jump`.
		For example the hunks of the current working tree diff can be
		retrieved by passing `diff HEAD`.
		If no argument is provided, then `diff HEAD~1 HEAD` will be
		used by default, i.e. the diff of the last commit.
		Refer to the upstream documentation for more information:
		https://github.com/git/git/tree/master/contrib/git-jump

------------------------------------------------------------------------------
MAPPINGS						*firebase-mappings*

The default keybindings are enabled with the |firebase_options_default_mappings| option and are as follows:

    <LocalLeader>n					|firebase#rebase#newbranch_n()|
    <LocalLeader>m					|firebase#rebase#movecommit()|
    <LocalLeader>p					|firebase#rebase#push_current()|
    <Leader>yg						|firebase#remote#copylink()|
    <LocalLeader>yg					|firebase#remote#copylink_cursor()|

==============================================================================
	vim:tw=78:sw=4:ts=8:ft=help:norl:noet:
